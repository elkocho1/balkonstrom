{%- if section.blocks.size > 0 -%}
  {%- comment -%}
    ------------------------------------------------------------------------------------------------------------------------
    CSS
    ------------------------------------------------------------------------------------------------------------------------
  {%- endcomment -%}
  <style>
    :root {
      --sticky-announcement-bar-enabled: {%- if section.settings.enable_sticky -%}1{% else %}0{% endif %};
    }

    {%- if section.settings.enable_sticky -%}
      #shopify-section-{{ section.id }} {
        position: sticky;
        top: 0;
        z-index: 20;
      }

      .shopify-section--header ~ #shopify-section-{{ section.id }} {
        top: calc(var(--sticky-header-enabled, 0) * var(--header-height, 0px));
      }
    {%- endif -%}

    /* Adjustments for button positions */
    .announcement-bar__wrapper {
      display: flex;
      align-items: center;
    }

    @media screen and (min-width: 749px) {
      #hide-bar-button {
        position: absolute;
        right: 17px;
      }
      .announcement-bar__wrapper {
        max-width: 100%;
       }
    }
     @media screen and (max-width: 748px) {
      .announcement-bar__wrapper {
        flex-direction: column;
        align-items: center;
      }
      .close_button{
        position: absolute;
        right: 12px;
      }
    }

     .announ-button {
      margin-right: 10px; /* Adjust as needed */
      outline: none;
      border: none;
      line-height: 2em;
      padding: 0px 1em;
      margin: 0px 0px 0px 1em;
      display: inline-block;
      border-radius: 0.25em;
      cursor: pointer;
      width: auto;
      height: inherit;
      font-family: inherit;
      font-size: 11.375px;
      text-align: center;
      text-decoration: none;
      appearance: none;
      color: rgb(0, 0, 0);
      background-color: rgb(255, 209, 24);
    }
    .announcementbar{
      font-size:13px;
    }

      .countdown-timer.count_announcementbar .countdown_main p#countdown small, .countdown-timer.count_announcementbar .countdown_main p#countdown div{
        color: {{ section.settings.countdown_text_color }}
      }
  </style>

  {%- comment -%}
    ------------------------------------------------------------------------------------------------------------------------
    LIQUID
    ------------------------------------------------------------------------------------------------------------------------
  {%- endcomment -%}

  <height-observer variable="announcement-bar">
    <div
      {% render 'surface',
        class: 'announcement-bar',
        background_gradient: section.settings.background_gradient,
        background: section.settings.background,
        text_color: section.settings.text_color
      %}
    >
      {%- if section.settings.navigation_mode == 'scrolling' -%}
        <marquee-text scrolling-speed="{{ section.settings.scrolling_speed }}" class="announcement-bar__scrolling-list">
          {%- capture content -%}
            {%- for block in section.blocks -%}
              <p class="bold {{ section.settings.text_size }}" {{ block.shopify_attributes }}>
                {%- if block.settings.url != blank -%}
                  <a href="{{ block.settings.url }}">{{ block.settings.text | escape }}</a>
                {%- else -%}
                  {{ block.settings.text | escape }}
                {%- endif -%}
              </p>

              <span class="shape-circle shape--sm"></span>
            {%- endfor -%}
          {%- endcapture -%}

          {%- for i in (1..10) -%}
            <span
              class="announcement-bar__item"
              {% unless forloop.first %}
                aria-hidden="true"
              {% endunless %}
            >
              {{- content -}}
            </span>
          {%- endfor -%}
        </marquee-text>
      {%- else -%}
        <div class="container">
          <div class="announcement-bar__wrapper {% if section.blocks.size == 1 %}justify-center{% else %}justify-between{% endif %}">
            {%- if section.blocks.size > 1 -%}
              <button
                class="tap-area"
                is="prev-button"
                aria-controls="announcement-bar"
                aria-label="{{ 'general.accessibility.previous' | t }}"
              >
                {%- render 'icon' with 'chevron-left', direction_aware: true -%}
              </button>
            {%- endif -%}

            <announcement-bar swipeable id="announcement-bar" class="announcement-bar__static-list">
              {%- for block in section.blocks -%}
                <p
                  class="announcementbar {{ section.settings.text_size }} {% unless forloop.first %}reveal-invisible{% endunless %}"
                  {{ block.shopify_attributes }}
                >
                  {%- if block.settings.url != blank -%}
                    <a href="{{ block.settings.url }}">{{ block.settings.text | escape }}</a>
                    <p class="sub_text">{{ block.settings.sub_text }}</p>
                  {%- else -%}
                    {{ block.settings.text | escape }}
                    <p class="sub_text">{{ block.settings.sub_text }}</p>
                  {%- endif -%}
                </p>
              {%- endfor -%}
            </announcement-bar>

            <div class="countdown-timer count_announcementbar">
              <div class="wrapper">
                <div class="countdown_main">
                  {% comment %}<p class="countdown_title h4">{{ section.settings.countdown_heading }}</p>{% endcomment %}
                  <p id="countdown" data-timer="{{ section.settings.timer }}"></p>
                </div>
              </div>
            </div>

            {%- if section.blocks.size > 1 -%}
              <button
                class="tap-area"
                is="next-button"
                aria-controls="announcement-bar"
                aria-label="{{ 'general.accessibility.next' | t }}"
              >
                {%- render 'icon' with 'chevron-right', direction_aware: true -%}
              </button>
            {%- endif -%}
            {%- for block in section.blocks -%}
              <a href="{{ block.settings.button_link }}" id="announ-button" class="announ-button">
                {{ block.settings.button_text -}}
              </a>
              <button id="hide-bar-button" class="close_button announcement-close-button" aria-label="Hide bar" onclick="hideAnnouncementBar()">
                <svg
                  viewBox="0 0 24 24"
                  width="24"
                  height="24"
                  style="fill: rgb(0, 0, 0); width: 19.5px; height: 19.5px;"
                >
                  <path d="M18,6h0a1,1,0,0,0-1.414,0L12,10.586,7.414,6A1,1,0,0,0,6,6H6A1,1,0,0,0,6,7.414L10.586,12,6,16.586A1,1,0,0,0,6,18H6a1,1,0,0,0,1.414,0L12,13.414,16.586,18A1,1,0,0,0,18,18h0a1,1,0,0,0,0-1.414L13.414,12,18,7.414A1,1,0,0,0,18,6Z"></path>
                </svg>
              </button>
            {%- endfor -%}
          </div>
        </div>
      {%- endif -%}
    </div>

    <script>
      function hideAnnouncementBar() {
        var announcementBar = document.querySelector('.announcement-bar');
        announcementBar.parentNode.removeChild(announcementBar);
        document.getElementById('announ-button').style.display = 'none';
        document.getElementById('hide-bar-button').style.display = 'none';
      }
    </script>

    <script>
      document.documentElement.style.setProperty('--announcement-bar-height', Math.round(document.getElementById('shopify-section-{{ section.id }}').clientHeight) + 'px');
    </script>
{%- endif -%}

{% schema %}
{
  "name": "Announcement bar",
  "class": "shopify-section--announcement-bar",
  "tag": "aside",
  "max_blocks": 2,
  "blocks": [
    {
      "type": "message",
      "name": "Message",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "label": "Text",
          "default": "Announce something here"
        },
        {
          "type": "text",
          "id": "sub_text",
          "label": "sub Text",
          "default": "Announce something here"
        },
        {
          "type": "text",
          "id": "button_text",
          "label": "Button text",
          "default": "Button label"
        },
        {
          "type": "url",
          "id": "button_link",
          "label": "Button link"
        },
        {
          "type": "url",
          "id": "url",
          "label": "Link"
        }
      ]
    }
  ],
  "settings": [
    {
      "type": "checkbox",
      "id": "enable_sticky",
      "label": "Enable sticky bar",
      "default": false
    },
    {
      "type": "select",
      "id": "text_size",
      "label": "Text size",
      "options": [
        {
          "value": "text-xxs",
          "label": "X-Small"
        },
        {
          "value": "text-xs",
          "label": "Small"
        },
        {
          "value": "text-base",
          "label": "Medium"
        },
        {
          "value": "text-lg",
          "label": "Large"
        }
      ],
      "default": "text-xs"
    },
    {
      "type": "select",
      "id": "navigation_mode",
      "label": "Multiple message navigation",
      "options": [
        {
          "value": "arrows",
          "label": "Arrows"
        },
        {
          "value": "scrolling",
          "label": "Auto-scrolling"
        }
      ],
      "default": "arrows"
    },
    {
      "type": "text",
      "id": "timer",
      "label": "Timer",
      "default": "Oct 14, 2023 12:00:00",
      "info": "Add timer in 'Jan 01, 2001 12:00:00' format"
    },
    {
      "type": "color",
      "id": "countdown_text_color",
      "label": "Countdown Text Color"
    },

    {
      "type": "header",
      "content": "Colors",
      "info": "Gradient replaces solid colors when set."
    },
    {
      "type": "color",
      "id": "background",
      "label": "Background"
    },
    {
      "type": "color_background",
      "id": "background_gradient",
      "label": "Background gradient"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text"
    }
  ]
}
{% endschema %}
