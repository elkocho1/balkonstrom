{%- comment -%}
----------------------------------------------------------------------------------------------------------------------
BUY BUTTONS
----------------------------------------------------------------------------------------------------------------------

This component is used to show the buy buttons

********************************************
Supported variables
********************************************

* product: the product from which to show the buttons
* show_payment_button: if we show or not the dynamic checkout button
* show_gift_card_recipient: for gift card products, an optional message/email to be sent to the recipient
* button_size: the size of the button (default to xl if none is passed)
* atc_button_background: the background of the ATC button
* atc_button_text_color: the text color of the ATC button
* payment_button_background: the custom dynamic checkout button background
* payment_button_text_color: the custom dynamic checkout button text color
* form_id: if specified, define the form ID linked to this input
{%- endcomment -%}

{% assign ProductId = product.selected_or_first_available_variant.id %}
<div hidden>{{ product.selected_or_first_available_variant | json }}</div>

{%- assign variant_picker_block = section.blocks | where: 'type', 'variant_picker' | first -%}

{%- form 'product', product, is: 'product-form', id: form_id -%}
  <input type="hidden" {% if variant_picker_block != blank %}disabled{% endif %} name="id" value="{{ product.selected_or_first_available_variant.id }}">

  {% assign ProductQTYPanels = product.metafields.custom.discount_panels %}
  {% assign ProductProgressbarPanels = product.metafields.custom.progressbar_panel %}
  
  
  {% if ProductQTYPanels != blank %}
           {%- if product.available -%}
      {% if upsell %}
        <div class="product-info__quantity-selector {{ block.shopify_attributes }}">
        <div class="h-stack gap-2">
          <legend class="text-subdued">Menge:</legend>
        </div>
        <div class="quantity_main_cover">
          {% if ProductProgressbarPanels != blank %}
          <ul class="ProductForm__ProgressBar">
            <li class="ProductForm__ProgressBarItem"></li>
            {% for ProgressBar in ProductProgressbarPanels.value %}
              <li class="ProductForm__ProgressBarItem">
              <div class="ProductForm__ProgressBarItemText">
                <span class="ProductForm__ProgressBarItemText-active">
                  {{ ProgressBar | split: "=" | first }}
                </span>
                <span class="ProductForm__ProgressBarItemText-inactive">
                  Spare{{ ProgressBar | split: "Spare" | last }}
                </span>
              </div>
            </li>
            {% endfor %}            
          </ul>
          {% endif %}
          <div class="quantity_inr_cover">
            {% for SinglePanels in ProductQTYPanels.value %}
            {% assign FirstinglePanels = SinglePanels | split: "=" | first %}  
            {% assign LastSinglePanels = SinglePanels | split: "=" | last %}    
            {% assign LastSinglePanelsSplitted = LastSinglePanels | split: "(" | last | remove: ")" %}    
            <div class="form-control">
              <input id="option_{{ forloop.index }}" type="radio" name="quantity" value="{{- FirstinglePanels | split: "(" | first | remove: ")"  -}}" {% if forloop.index == 1 %} checked{% endif %} data-product-price="{{ product.selected_or_first_available_variant.price }}" data-product-ComparePrice="{{ product.selected_or_first_available_variant.compare_at_price }}" product-discount-value="{{ LastSinglePanelsSplitted | split: " " | last | remove: "â‚¬" }}"{% if product.selected_or_first_available_variant.compare_at_price > product.selected_or_first_available_variant.price %} data-last-added-value="{{ product.selected_or_first_available_variant.compare_at_price | minus: product.selected_or_first_available_variant.price | divided_by: 100 }}"{% endif %}>
              <label for="option_{{ forloop.index }}">
                <div class="color-value-bold">
                {% if FirstinglePanels contains "Bestseller" %}<span class="bst_slr">{{ FirstinglePanels | split: "(" | last | remove: ")" }}</span>{% endif %}
                  <div class="lefe-color-paar">
                    <span class="circle-icon"></span>
                    <div class="right-paar-option">
                      <span>{{ LastSinglePanels | split: "(" | first }}</span>
                      <span class="upsale_badgePrice">{{ LastSinglePanels | split: "(" | last | remove: ")" }}</span>
                    </div>
                  </div>
                </div>
              </label>
            </div>
            {% endfor %}

            {% comment %}
            <div class="form-control">
              <input id="option_2" type="radio" name="quantity" value="2">
              <label for="option_2">
                <div class="color-value-bold">
                  <div class="lefe-color-paar">
                    <span class="circle-icon"></span>
                    <div class="right-paar-option">
                      <span>12 Stocks</span>
                      <span>spare <span class="color-maroon">11%</span></span>
                    </div>
                  </div>
                </div>  
              </label>
            </div>
            <div class="form-control">
              <input id="option_3" type="radio" name="quantity" value="5">
              <label for="option_3">
                <div class="color-value-bold">
                  <div class="lefe-color-paar">
                    <span class="circle-icon"></span>
                    <div class="right-paar-option">
                      <span>18 Stocks</span>
                      <span>spare <span class="color-maroon">17%</span></span>
                    </div>
                  </div>
                </div>  
              </label>
            </div>
            {% endcomment %}
          </div>
        </div>
      </div>
      {% endif %}
    {%- endif -%}
  {%- endif -%}

  {%- assign button_disabled = false -%}
  {%- assign button_size = button_size | default: 'xl' -%}

  {%- if product.selected_or_first_available_variant.available -%}
    {%- if product.template_suffix contains 'pre-order' -%}
      {%- capture button_content -%}{{ 'product.general.pre_order_button' | t }}{%- endcapture -%}
    {%- else -%}
      {%- capture button_content -%}{{ 'product.general.add_to_cart_button' | t }}{%- endcapture -%}
    {%- endif -%}
  {%- else -%}
    {%- capture button_content -%}{{ 'product.general.sold_out_button' | t }}{%- endcapture -%}
    {%- assign button_disabled = true -%}
  {%- endif -%}

  <div class="v-stack gap-4">
    {%- if product.gift_card? and show_gift_card_recipient -%}
      <gift-card-recipient class="gift-card-recipient v-stack gap-3">
        {%- assign checkbox_label = 'gift_card.recipient.checkbox' | t -%}
        {%- render 'checkbox', label: checkbox_label, name: 'properties[__shopify_send_gift_card_to_recipient]' -%}

        <div class="gift-card-recipient__fields js:hidden">
          <div class="fieldset">
            {%- liquid
              assign recipient_email_label = 'gift_card.recipient.email_label' | t
              render 'input', type: 'email', label: recipient_email_label, name: 'properties[Recipient email]', value: form.email, required: true

              assign recipient_name_label = 'gift_card.recipient.name_label' | t
              render 'input', label: recipient_name_label, name: 'properties[Recipient name]', value: form.name

              assign message_label = 'gift_card.recipient.message_label' | t
              render 'input', label: message_label, name: 'properties[Recipient message]', value: form.message, multiline: 3, maxlength: 200, show_max_characters_count: true
            -%}
          </div>
        </div>
      </gift-card-recipient>
    {%- endif -%}

    <buy-buttons class="buy-buttons {% if show_payment_button %}buy-buttons--multiple{% endif %}" template="{{ product.template_suffix | escape }}" form="{{ form_id }}">
      {%- render 'button', content: button_content, type: 'submit', size: button_size, disabled: button_disabled, secondary: show_payment_button, subdued: button_disabled, background: atc_button_background, text_color: atc_button_text_color -%}

      {%- if show_payment_button -%}
        {{- form | payment_button -}}

        <style>
          #shopify-section-{{ section.id }} .shopify-payment-button {
          {%- unless product.selected_or_first_available_variant.available -%}
            display: none;
          {%- endunless -%}

          {%- if payment_button_background != blank and payment_button_background != 'rgba(0,0,0,0)' -%}
            --button-background: {{ payment_button_background.rgb }};
          {%- endif -%}

          {%- if payment_button_text_color != blank and payment_button_text_color != 'rgba(0,0,0,0)' -%}
            --button-text-color: {{ payment_button_text_color.rgb }};
          {%- endif -%}
          }
        </style>
      {%- endif -%}
    </buy-buttons>
  </div>
{%- endform -%}